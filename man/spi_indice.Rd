% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spi.R
\name{spi_indice}
\alias{spi_indice}
\alias{spei_indice}
\alias{spi_referencia}
\title{Calcula el SPI}
\usage{
spi_indice(
  fecha,
  precipitacion,
  escalas,
  referencia = rep(TRUE, length(fecha)),
  distribucion = "Gamma",
  ...
)

spei_indice(fecha, balance, escalas, distribucion = "log-Logistic", ...)

spi_referencia(fecha, precipitacion)
}
\arguments{
\item{fecha}{vector de fechas.}

\item{precipitacion}{vector de precipitacion.}

\item{escalas}{vector numérico con las escalas requeridas}

\item{referencia}{serie de precipitación para usar de referencia en el ajuste
a la distribución teórica. Puede ser:
\itemize{
\item vector lógico o numérico que se usará para filtrar los datos de entrada.
\item un data frame con columna \code{fecha} y \code{precipitacion}. La función
\code{spi_referencia()} es un simple wrapper a \code{data.frame()} que le pone el nombre
correcto a las variables.
}}

\item{distribucion}{distribución usada para ajustar los datos.}

\item{...}{argumentos pasados a \link[SPEI:Drought-indices]{SPEI::spi}}

\item{balance}{balance entre precipitación y evapotaranspiración potencial.}
}
\value{
Un data.frame con columnas
\itemize{
\item \code{fecha} (fecha)
\item \code{escala} (numérico) definidas en el argumento de entrada
\item \code{spi} o \code{spei} (numérico)
}
}
\description{
Calcula esl Índice Estandarizado de Precipitación para distintas escalas. El \code{spi_indice} toma valores
de precipitación mientras que el \code{spei_indice} toma valores del balance entre precipitación y evapotranspiración
potencial. Internamente hacen lo mismo; la única diferencia es la distribución teórica
usada por defecto para ajustar los datos.
}
\examples{
# datos aleatorios
datos <- data.frame(fecha = seq(as.Date("1985-01-01"), as.Date("2015-12-01"), by = "1 month"))
set.seed(42)
datos$pp <- rgamma(nrow(datos), shape = 2, scale = 10)

with(datos, spi_indice(fecha, pp, escalas = 1:5))

# Si entran nuevos datos y hay que calcular el spi nuevamente pero sin que
# cambien los valores viejos, hay que usar `referencia`

nuevos_datos <- data.frame(fecha = seq(as.Date("2016-01-01"),
                                       as.Date("2017-12-01"), by = "1 month"))
nuevos_datos$pp <- rgamma(nrow(nuevos_datos), shape = 2, scale = 10)
nuevos_datos <- rbind(datos, nuevos_datos)

# Usando un vector lógico
with(nuevos_datos, spi_indice(fecha, pp, escalas = 1:5,
                       referencia = data.table::year(fecha) < 2016))

# O un data.frame
with(nuevos_datos, spi_indice(fecha, pp, escalas = 1:5,
                       referencia = spi_referencia(datos$fecha, datos$pp)))


}
